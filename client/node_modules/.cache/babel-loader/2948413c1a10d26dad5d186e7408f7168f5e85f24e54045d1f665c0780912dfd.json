{"ast":null,"code":"import toast from \"react-hot-toast\";\nimport { authenticate } from \"./helper\";\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  // if(values.username){\n  //     const {status} = await authenticate(values.username);\n\n  // if(status!= 200)\n  // {\n  //     errors.exist=toast.error(\"User does not exist..!\")\n  // }\n  // }\n  // return errors;\n}\n\nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\nexport async function resetPasswordValidation(values) {\n  const errors = passwordVerify({}, values);\n  if (values.password !== values.confirm_pwd) {\n    errors.exist = toast.error(\"Password not match...!\");\n  }\n  return errors;\n}\nexport async function registerValidation(values) {\n  const errors = usernameVerify({}, values);\n  passwordVerify(errors, values);\n  emailVerify(errors, values);\n  return errors;\n}\nexport async function profileValidation(values) {\n  const errors = emailVerify({}, values);\n  return errors;\n}\nfunction usernameVerify(error = {}, values) {\n  if (!values.username) {\n    error.username = toast.error(\"Username Required..!\");\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error(\"Invalid Username...!\");\n  }\n  return error;\n}\nfunction passwordVerify(error = {}, values) {\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  if (!values.password) {\n    error.password = toast.error(\"Password Required...!\");\n  } else if (values.password.includes(\" \")) {\n    error.password = toast.error(\"Wrong Password...!\");\n  } else if (values.password.length < 4) {\n    error.password = toast.error(\"Password must be more than 4 characters long\");\n  } else if (!specialChars.test(values.password)) {\n    error.password = toast.error(\"Password must have special character\");\n  }\n  return error;\n}\nfunction emailVerify(error = {}, values) {\n  if (!values.email) {\n    error.email = toast.error(\"Email Required...!\");\n  } else if (values.email.includes(\" \")) {\n    error.email = toast.error(\"Wrong Email...!\");\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    error.email = toast.error(\"Invalid email address...!\");\n  }\n  return error;\n}","map":{"version":3,"names":["toast","authenticate","usernameValidate","values","errors","usernameVerify","passwordValidate","passwordVerify","resetPasswordValidation","password","confirm_pwd","exist","error","registerValidation","emailVerify","profileValidation","username","includes","specialChars","length","test","email"],"sources":["A:/MERN/login_signup/client/src/helper/validate.js"],"sourcesContent":["import toast from \"react-hot-toast\";\r\nimport { authenticate } from \"./helper\";\r\n\r\nexport async function usernameValidate(values){\r\n    const errors =usernameVerify({},values);\r\n    // if(values.username){\r\n    //     const {status} = await authenticate(values.username);\r\n    \r\n    // if(status!= 200)\r\n    // {\r\n    //     errors.exist=toast.error(\"User does not exist..!\")\r\n    // }\r\n    // }\r\n    // return errors;\r\n}\r\n\r\nexport async function passwordValidate(values){\r\n    const errors = passwordVerify({}, values);\r\n\r\n    return errors;\r\n}\r\n\r\nexport async function resetPasswordValidation(values){\r\n    const errors = passwordVerify({}, values);\r\n\r\n    if(values.password !== values.confirm_pwd){\r\n        errors.exist = toast.error(\"Password not match...!\");\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nexport async function registerValidation(values){\r\n    const errors = usernameVerify({}, values);\r\n    passwordVerify(errors, values);\r\n    emailVerify(errors, values);\r\n\r\n    return errors;\r\n}\r\n\r\nexport async function profileValidation(values){\r\n    const errors = emailVerify({}, values);\r\n    return errors;\r\n}\r\n\r\n\r\nfunction usernameVerify(error={},values){\r\n    if(!values.username)\r\n    {\r\n        error.username=toast.error(\"Username Required..!\");\r\n    }\r\n    else if(values.username.includes(\" \")){\r\n        error.username=toast.error(\"Invalid Username...!\")\r\n    }\r\n\r\n    return error;\r\n}\r\nfunction passwordVerify(error={},values){\r\n    const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n\r\n    if(!values.password){\r\n        error.password = toast.error(\"Password Required...!\");\r\n    } else if(values.password.includes(\" \")){\r\n        error.password = toast.error(\"Wrong Password...!\");\r\n    }else if(values.password.length < 4){\r\n        error.password = toast.error(\"Password must be more than 4 characters long\");\r\n    }else if(!specialChars.test(values.password)){\r\n        error.password = toast.error(\"Password must have special character\");\r\n    }\r\n\r\n    return error;\r\n}\r\n\r\nfunction emailVerify(error ={}, values){\r\n    if(!values.email){\r\n        error.email = toast.error(\"Email Required...!\");\r\n    }else if(values.email.includes(\" \")){\r\n        error.email = toast.error(\"Wrong Email...!\")\r\n    }else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)){\r\n        error.email = toast.error(\"Invalid email address...!\")\r\n    }\r\n\r\n    return error;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}