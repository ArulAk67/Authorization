{"ast":null,"code":"import toast from \"react-hot-toast\";\nimport { authenticate } from \"./helper\";\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  if (values.username) {\n    const {\n      status\n    } = await authenticate(values.username);\n  }\n  return errors;\n}\nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\nexport async function resetPasswordValidation(values) {\n  const errors = passwordVerify({}, values);\n  if (values.password !== values.confirm_pwd) {\n    errors.exist = toast.error(\"Password not match...!\");\n  }\n  return errors;\n}\nexport async function registerValidation(values) {\n  const errors = usernameVerify({}, values);\n  passwordVerify(errors, values);\n  emailVerify(errors, values);\n  return errors;\n}\nexport async function profileValidation(values) {\n  const errors = emailVerify({}, values);\n  return errors;\n}\nfunction usernameVerify(error = {}, values) {\n  if (!values.username) {\n    error.username = toast.error(\"Username Required..!\");\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error(\"Invalid Username...!\");\n  }\n  return error;\n}\nfunction passwordVerify(error = {}, values) {\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  if (!values.password) {\n    error.password = toast.error(\"Password Required...!\");\n  } else if (values.password.includes(\" \")) {\n    error.password = toast.error(\"Wrong Password...!\");\n  } else if (values.password.length < 4) {\n    error.password = toast.error(\"Password must be more than 4 characters long\");\n  } else if (!specialChars.test(values.password)) {\n    error.password = toast.error(\"Password must have special character\");\n  }\n  return error;\n}\nfunction emailVerify(error = {}, values) {\n  if (!values.email) {\n    error.email = toast.error(\"Email Required...!\");\n  } else if (values.email.includes(\" \")) {\n    error.email = toast.error(\"Wrong Email...!\");\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    error.email = toast.error(\"Invalid email address...!\");\n  }\n  return error;\n}","map":{"version":3,"names":["toast","authenticate","usernameValidate","values","errors","usernameVerify","username","status","passwordValidate","passwordVerify","resetPasswordValidation","password","confirm_pwd","exist","error","registerValidation","emailVerify","profileValidation","includes","specialChars","length","test","email"],"sources":["A:/MERN/login_signup/client/src/helper/validate.js"],"sourcesContent":["import toast from \"react-hot-toast\";\r\nimport { authenticate } from \"./helper\";\r\n\r\nexport async function usernameValidate(values){\r\n    const errors =usernameVerify({},values);\r\n    if(values.username){\r\n        const {status}=await authenticate(values.username)\r\n    }\r\n    return errors;\r\n}\r\n\r\nexport async function passwordValidate(values){\r\n    const errors = passwordVerify({}, values);\r\n\r\n    return errors;\r\n}\r\n\r\nexport async function resetPasswordValidation(values){\r\n    const errors = passwordVerify({}, values);\r\n\r\n    if(values.password !== values.confirm_pwd){\r\n        errors.exist = toast.error(\"Password not match...!\");\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nexport async function registerValidation(values){\r\n    const errors = usernameVerify({}, values);\r\n    passwordVerify(errors, values);\r\n    emailVerify(errors, values);\r\n\r\n    return errors;\r\n}\r\n\r\nexport async function profileValidation(values){\r\n    const errors = emailVerify({}, values);\r\n    return errors;\r\n}\r\n\r\n\r\nfunction usernameVerify(error={},values){\r\n    if(!values.username)\r\n    {\r\n        error.username=toast.error(\"Username Required..!\");\r\n    }\r\n    else if(values.username.includes(\" \")){\r\n        error.username=toast.error(\"Invalid Username...!\")\r\n    }\r\n\r\n    return error;\r\n}\r\nfunction passwordVerify(error={},values){\r\n    const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n\r\n    if(!values.password){\r\n        error.password = toast.error(\"Password Required...!\");\r\n    } else if(values.password.includes(\" \")){\r\n        error.password = toast.error(\"Wrong Password...!\");\r\n    }else if(values.password.length < 4){\r\n        error.password = toast.error(\"Password must be more than 4 characters long\");\r\n    }else if(!specialChars.test(values.password)){\r\n        error.password = toast.error(\"Password must have special character\");\r\n    }\r\n\r\n    return error;\r\n}\r\n\r\nfunction emailVerify(error ={}, values){\r\n    if(!values.email){\r\n        error.email = toast.error(\"Email Required...!\");\r\n    }else if(values.email.includes(\" \")){\r\n        error.email = toast.error(\"Wrong Email...!\")\r\n    }else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)){\r\n        error.email = toast.error(\"Invalid email address...!\")\r\n    }\r\n\r\n    return error;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}