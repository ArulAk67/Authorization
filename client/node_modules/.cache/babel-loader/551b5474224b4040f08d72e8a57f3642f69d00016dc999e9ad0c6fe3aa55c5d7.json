{"ast":null,"code":"import toast from \"react-hot-toast\";\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\nfunction usernameVerify(error = {}, values) {\n  if (!values.username) {\n    error.username = toast.error(\"Username Required..!\");\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error(\"Invalid Username...!\");\n  }\n  return error;\n}\nfunction passwordVerify(error = {}, values) {\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  if (!values.password) {\n    error.password = toast.error(\"Password Required...!\");\n  } else if (values.password.includes(\" \")) {\n    error.password = toast.error(\"Wrong Password...!\");\n  } else if (values.password.length < 4) {\n    error.password = toast.error(\"Password must be more than 4 characters long\");\n  } else if (!specialChars.test(values.password)) {\n    error.password = toast.error(\"Password must have special character\");\n  }\n  return error;\n}","map":{"version":3,"names":["toast","usernameValidate","values","errors","usernameVerify","error","username","includes","passwordVerify","specialChars","password","length","test"],"sources":["A:/MERN/login_signup/client/src/helper/validate.js"],"sourcesContent":["import toast from \"react-hot-toast\";\r\n\r\nexport async function usernameValidate(values){\r\n    const errors =usernameVerify({},values);\r\n    return errors;\r\n}\r\n\r\n\r\nfunction usernameVerify(error={},values){\r\n    if(!values.username)\r\n    {\r\n        error.username=toast.error(\"Username Required..!\");\r\n    }\r\n    else if(values.username.includes(\" \")){\r\n        error.username=toast.error(\"Invalid Username...!\")\r\n    }\r\n\r\n    return error;\r\n}\r\nfunction passwordVerify(error={},values){\r\n    const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n\r\n    if(!values.password){\r\n        error.password = toast.error(\"Password Required...!\");\r\n    } else if(values.password.includes(\" \")){\r\n        error.password = toast.error(\"Wrong Password...!\");\r\n    }else if(values.password.length < 4){\r\n        error.password = toast.error(\"Password must be more than 4 characters long\");\r\n    }else if(!specialChars.test(values.password)){\r\n        error.password = toast.error(\"Password must have special character\");\r\n    }\r\n\r\n    return error;\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;AAEnC,OAAO,eAAeC,gBAAgBA,CAACC,MAAM,EAAC;EAC1C,MAAMC,MAAM,GAAEC,cAAc,CAAC,CAAC,CAAC,EAACF,MAAM,CAAC;EACvC,OAAOC,MAAM;AACjB;AAGA,SAASC,cAAcA,CAACC,KAAK,GAAC,CAAC,CAAC,EAACH,MAAM,EAAC;EACpC,IAAG,CAACA,MAAM,CAACI,QAAQ,EACnB;IACID,KAAK,CAACC,QAAQ,GAACN,KAAK,CAACK,KAAK,CAAC,sBAAsB,CAAC;EACtD,CAAC,MACI,IAAGH,MAAM,CAACI,QAAQ,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAC;IAClCF,KAAK,CAACC,QAAQ,GAACN,KAAK,CAACK,KAAK,CAAC,sBAAsB,CAAC;EACtD;EAEA,OAAOA,KAAK;AAChB;AACA,SAASG,cAAcA,CAACH,KAAK,GAAC,CAAC,CAAC,EAACH,MAAM,EAAC;EACpC,MAAMO,YAAY,GAAG,yCAAyC;EAE9D,IAAG,CAACP,MAAM,CAACQ,QAAQ,EAAC;IAChBL,KAAK,CAACK,QAAQ,GAAGV,KAAK,CAACK,KAAK,CAAC,uBAAuB,CAAC;EACzD,CAAC,MAAM,IAAGH,MAAM,CAACQ,QAAQ,CAACH,QAAQ,CAAC,GAAG,CAAC,EAAC;IACpCF,KAAK,CAACK,QAAQ,GAAGV,KAAK,CAACK,KAAK,CAAC,oBAAoB,CAAC;EACtD,CAAC,MAAK,IAAGH,MAAM,CAACQ,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAC;IAChCN,KAAK,CAACK,QAAQ,GAAGV,KAAK,CAACK,KAAK,CAAC,8CAA8C,CAAC;EAChF,CAAC,MAAK,IAAG,CAACI,YAAY,CAACG,IAAI,CAACV,MAAM,CAACQ,QAAQ,CAAC,EAAC;IACzCL,KAAK,CAACK,QAAQ,GAAGV,KAAK,CAACK,KAAK,CAAC,sCAAsC,CAAC;EACxE;EAEA,OAAOA,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}